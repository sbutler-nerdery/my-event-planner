@model Web.ViewModels.EditEventViewModel

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Edit Event</h2>

<p class="message-success">@ViewBag.StatusMessage</p>

    @if (Model != null)
    {
        using (Html.BeginForm())
        {
            @Html.ValidationSummary(true)

            <fieldset>
                <legend>EventViewModel</legend>

                <div class="editor-label">
                    @Html.LabelFor(model => model.Title)
                </div>
                <div class="editor-field">
                    @Html.EditorFor(model => model.Title)
                    @Html.ValidationMessageFor(model => model.Title)
                </div>

                <div class="editor-label">
                    @Html.LabelFor(model => model.Description)
                </div>
                <div class="editor-field">
                    @Html.EditorFor(model => model.Description)
                    @Html.ValidationMessageFor(model => model.Description)
                </div>

                <div class="editor-label">
                    @Html.LabelFor(model => model.Location)
                </div>
                <div class="editor-field">
                    @Html.EditorFor(model => model.Location)
                    @Html.ValidationMessageFor(model => model.Location)
                </div>

                <div class="editor-label">
                    @Html.LabelFor(model => model.StartDate)
                </div>
                <div class="editor-field">
                    @Html.EditorFor(model => model.StartDate)
                    @Html.ValidationMessageFor(model => model.StartDate)
                </div>

                <div class="editor-label">
                    @Html.LabelFor(model => model.StartTime)
                </div>
                <div class="editor-field">
                    @Html.TextBoxFor(model => model.StartTime, new { data_autocomplete="true" })
                    @Html.ValidationMessageFor(model => model.StartTime)
                </div>

                <div class="editor-label">
                    @Html.LabelFor(model => model.EndTime)
                </div>
                <div class="editor-field">
                    @Html.TextBoxFor(model => model.EndTime, new { data_autocomplete="true" })
                    @Html.ValidationMessageFor(model => model.EndTime)
                    @Html.HiddenFor(model => model.EventId)
                </div>
                
                <div class="editor-label">
                    @Html.LabelFor(model => model.PeopleInvited)
                </div>
                <div class="editor-field">
                    <p><a href="javascript:;" data-open-modal="invite-person-to-event">Invite people to my friends list</a></p>
                    @Html.ListBoxFor(model => model.PeopleInvited, Model.PeopleList, new {name="PeopleInvited", @class="fancy-list-box", data_placeholder_type="friend-list"})
                    @Html.ValidationMessageFor(model => model.EndTime)
                </div>                
                <div class="editor-field">
                    @Html.LabelFor(model => model.AllEventFoodItems) 
                    @if (Model.AllEventFoodItems.Count > 0)
                    {
                        <ul>
                            @foreach (var food in Model.AllEventFoodItems)
                            {
                                var whoIsBringingIt = Model.MyFoodItems.Select(x => x.Value).Contains(food.FoodItemId.ToString()) ? " - Brought by you" : "";
                                <li>@food.Title @whoIsBringingIt</li>
                            }
                        </ul>
                    }
                    else
                    {
                        @:No one is bringing any food yet.
                    }
                </div>
                <div class="editor-field">
                    @Html.LabelFor(model => model.AllEventGames)        
                    @if (Model.AllEventGames.Count > 0)
                    {
                        <ul>
                            @foreach (var game in Model.AllEventGames)
                            {
                                var whoIsBringingIt = Model.MyGames.Select(x => x.Value).Contains(game.GameId.ToString()) ? " - Brought by you" : "";
                                <li>@game.Title @whoIsBringingIt</li>
                            }
                        </ul>
                    }
                    else
                    {
                        @:No one is bringing any games yet.
                    }                
                </div>
                <div class="editor-label">
                    @Html.LabelFor(model => model.WillBringTheseFoodItems)
                </div>
                <div class="editor-field">
                    <p><a href="javascript:;" data-open-modal="add-food-item">Add to my food list</a></p>
                    @Html.ListBoxFor(model => model.WillBringTheseFoodItems, Model.MyFoodItems, new { name="FoodItemsSelected", @class="fancy-list-box", data_placeholder_type="food-list"})
                </div>  
          
                <div class="editor-label">
                    @Html.LabelFor(model => model.WillBringTheseGames)
                </div>
                <div class="editor-field">
                    <p><a href="javascript:;" data-open-modal="add-game-item">Add to my games list</a></p>
                    @Html.ListBoxFor(model => model.WillBringTheseGames, Model.MyGames, new { name="MyGames", @class="fancy-list-box", data_placeholder_type="game-list"})
                </div>                 

                <p>
                    <input type="submit" value="Save" />
                </p>
            </fieldset>
        }
        
        @Html.Partial("_InvitePeopleDialog", Model)
        @Html.Partial("_AddEventItems", Model)
    }
<div>
    @Html.ActionLink("Cancel Event", "Delete", new { id = Model.EventId })            
</div>
<div>
    @Html.ActionLink("Back to Dashboard", "Index","Home")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
