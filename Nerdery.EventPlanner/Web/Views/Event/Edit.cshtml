@model Web.ViewModels.EventViewModel

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Edit Event</h2>

<p class="message-success">@ViewBag.StatusMessage</p>

    @if (Model != null)
    {
        using (Html.BeginForm())
        {
            @Html.ValidationSummary(true)

            <fieldset>
                <legend>EventViewModel</legend>

                <div class="editor-label">
                    @Html.LabelFor(model => model.Title)
                </div>
                <div class="editor-field">
                    @Html.EditorFor(model => model.Title)
                    @Html.ValidationMessageFor(model => model.Title)
                </div>

                <div class="editor-label">
                    @Html.LabelFor(model => model.Description)
                </div>
                <div class="editor-field">
                    @Html.EditorFor(model => model.Description)
                    @Html.ValidationMessageFor(model => model.Description)
                </div>

                <div class="editor-label">
                    @Html.LabelFor(model => model.Location)
                </div>
                <div class="editor-field">
                    @Html.EditorFor(model => model.Location)
                    @Html.ValidationMessageFor(model => model.Location)
                </div>

                <div class="editor-label">
                    @Html.LabelFor(model => model.StartDate)
                </div>
                <div class="editor-field">
                    @Html.EditorFor(model => model.StartDate)
                    @Html.ValidationMessageFor(model => model.StartDate)
                </div>

                <div class="editor-label">
                    @Html.LabelFor(model => model.StartTime)
                </div>
                <div class="editor-field">
                    @Html.TextBoxFor(model => model.StartTime, new { data_autocomplete="true" })
                    @Html.ValidationMessageFor(model => model.StartTime)
                </div>

                <div class="editor-label">
                    @Html.LabelFor(model => model.EndTime)
                </div>
                <div class="editor-field">
                    @Html.TextBoxFor(model => model.EndTime, new { data_autocomplete="true" })
                    @Html.ValidationMessageFor(model => model.EndTime)
                    @Html.HiddenFor(model => model.EventId)
                </div>
                
                <div class="editor-label">
                    @Html.LabelFor(model => model.PeopleInvited)
                </div>
                <div class="editor-field">
                    @Html.ListBoxFor(model => model.PeopleInvited, new MultiSelectList(Model.PeopleList, "Value", "Text")) @*new {name="PeopleInvited",@style="width:300px;", @class="fancy-list-box"}*@
                    @Html.HiddenFor(model => model.EventId)
                </div>                

                <p>
                    <input type="submit" value="Save" />
                </p>
            </fieldset>
        }
        <div>
            @Html.ActionLink("Delete Event", "Delete", new { id = Model.EventId })            
        </div>
    }

<div>
    @Html.ActionLink("Back to List", "Index","Home")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
