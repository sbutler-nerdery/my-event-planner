@model Web.ViewModels.EditEventViewModel

<div data-dialog="true" title="Invite More People" data-action="invite-person-to-event">
    @using (Ajax.BeginForm("AddNewGuest", "Service", new AjaxOptions
        {
            HttpMethod = "POST",
            OnSuccess = "EventPlanner.Events.refreshGuests('invite-person-to-event', data)",
            OnBegin = "EventPlanner.Modals.showLoader('invite-person-to-event')",
            OnComplete = "EventPlanner.Modals.hideLoader('invite-person-to-event')"
        }))
    {
        <fieldset>
            <legend>Invite a New Guest</legend>
            <div class="editor-label">
                @Html.LabelFor(model => model.EmailInvite.FirstName)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.EmailInvite.FirstName)
                @Html.ValidationMessageFor(model => model.EmailInvite.FirstName)
            </div>  
            <div class="editor-label">
                @Html.LabelFor(model => model.EmailInvite.LastName)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.EmailInvite.LastName)
                @Html.ValidationMessageFor(model => model.EmailInvite.LastName)
            </div>  
            <div class="editor-label">
                @Html.LabelFor(model => model.EmailInvite.Email)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.EmailInvite.Email)
                @Html.ValidationMessageFor(model => model.EmailInvite.Email)
            </div>  
            @Html.HiddenFor(model => model.EventId)
            @Html.HiddenFor(model => model.PersonId)
            <input type="submit" value="Send Invite" />
            <div class="loader"></div>
        </fieldset>                  
    }    
</div>

<div data-dialog="true" title="Update Guest Info" data-action="update-guest">
    @using (Ajax.BeginForm("UpdateGuestInfo", "Service", new AjaxOptions
    {
        HttpMethod = "POST",
        OnSuccess = "EventPlanner.Events.refreshGuests('update-guest', data)",
        OnBegin = "EventPlanner.Modals.showLoader('update-guest')",
        OnComplete = "EventPlanner.Modals.hideLoader('update-guest')"
    }))
    {
        <fieldset>
            <legend>Update Guest</legend>
            <div class="editor-label">
                @Html.LabelFor(model => model.UpdateGuest.FirstName)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.UpdateGuest.FirstName)
                @Html.ValidationMessageFor(model => model.UpdateGuest.FirstName)
            </div>  
            <div class="editor-label">
                @Html.LabelFor(model => model.UpdateGuest.LastName)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.UpdateGuest.LastName)
                @Html.ValidationMessageFor(model => model.UpdateGuest.LastName)
            </div>  
            <div class="editor-label">
                @Html.LabelFor(model => model.UpdateGuest.Email)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.UpdateGuest.Email)
                @Html.ValidationMessageFor(model => model.UpdateGuest.Email)
            </div>  
            @Html.HiddenFor(model => model.EventId)
            @Html.HiddenFor(model => model.UpdateGuest.PersonId)
            <input type="submit" value="Update" />
            <div class="loader"></div>
        </fieldset>                  
    }    
</div>